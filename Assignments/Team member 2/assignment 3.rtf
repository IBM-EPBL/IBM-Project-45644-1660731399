{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang1033{\fonttbl{\f0\fswiss\fprq2\fcharset0 Calibri;}{\f1\fnil\fcharset0 Calibri;}{\f2\fnil Calibri;}}
{\*\generator Riched20 10.0.18362}\viewkind4\uc1 
\pard\widctlpar\sa160\sl252\slmult1\f0\fs22\lang16393 1.create  registration page in html  with username, email and phone number and by using POST  method  display  it in next  html  page\par
<html>\par
<head>\par
<title> Registration from </title>\par
</head>\par
<body>\par
<from  action=\rdblquote output-page.php\rdblquote method=\rdblquote post\rdblquote >\par
<input type=\rdblquote text\rdblquote  name=\rdblquote  f name \ldblquote  placeholder=\rdblquote user name\rdblquote ><br><br>\par
<input type=\rdblquote text\rdblquote  name=\rdblquote  f name \ldblquote  placeholder=\rdblquote email\rdblquote ><br><br>\par
<input type=\rdblquote text\rdblquote  name=\rdblquote  f name \ldblquote  placeholder=\rdblquote phone number\rdblquote ><br><br>\par
</form>\par
</body>\par
</html>\par
\par
\f1\fs28\lang9{\pict{\*\picprop{\sp{\sn wzDescription}{\sv Image}}{\sp{\sn posv}{\sv 1}}
}\pngblip\picw9263\pich5522\piccropr2183\piccropb2061\picwgoal5251\pichgoal3131 
89504e470d0a1a0a0000000d49484452000001ed0000014108060000005a6af76e000000017352
474200aece1ce90000000467414d410000b18f0bfc6105000000097048597300000ec300000ec3
01c76fa8640000201c49444154785eeddd0f8c9bf77ddff1ef257662c575bd7a7273172735ed36
b3d3ce7f800408a938c6057027db6b72672fed78d3262b801b1fea001db6743a0a83270898492d
ceb6004e21ff01a22875c9a659ad4b3adb6a0d9870141d0dc49b2c2d953d6f369d45b94bad18ab
33c74e9be4f6fbfe9edf433e0fef218fbce39dee7b7abf04e2c8e71f1f92cf3d9fe7f7fdfd781a
39facab71605a65d7cc1c5f2ee5f78b7bce3edef0853ce6123eec6110d60937a5bf809a334b02f
fbc5cb08ec18810d601323b40dfb4517d8efbbf87df2b6113e4600381770b637ea82f32e90f7ba
163600e0dc41681bf5de73ac85fdd5ea9f867b0070ee1afa40b4bffdc9dfc9b7bff9acbfbfeda6
bcffb9de8e3dd9f03f3ff4d10fca3bde79bebfbfd6def8d11b72e4bffca53c7bf45979e57f7dd7
4fbbfcd77e453e70fdd572db1d9372e14517fa690f941f94bb4a9ff6f757ea922dbf24ef19b095
fde68f7f2cf5a78ec9c913df91d3dffbbe9f76d97bdf23d75cfb1b32feb16db2e55deff2d3362a
0deddf99faedf00800ce4d430ded38b07ff4373f928b2ebee8ac8676bc0feb11dc4f3ffe4d79e4
fe3f9637def871989276e185ef921d9ff96772eaf829f9e6916fc91fd5bf1ce60ceeedae75fdfe
adff40ce7bdb7961caf29e697c5b1efdda9fcb9b6fbee942fad77d582b0def9327fe4ab66cd922
b77df2b7e4c3f90ff9e91b11a10d00432c8f7706b686e5d9a2cfadfba0fba2fba4fbb65634b01f
dcffb00fec8f6eff88fcfb87f6f950d69bded7693a4f97d1c05ead8bde79f1c081fdc75ff953b9
e492bf27ff6edf6eb9f3ae3be4967ffc9bfea6f7759aced3654e3ef73fc25afd79f181ddf2fb77
a76f7ff29c9bb1f094fcc7bbef936f2d44cbfdf02fee93df7fe03bd1837574a2fc41b9fe03895b
f96498d3cd19f9faef7e46befeaabbf7e867b2973f7e9f5cffbbdf704bae3f7d3d9f3b1e1e04fe
35f6b93f5d5f533f5efd86fcde07a2f7667927e573eefdeedcd78d4f3ffff87871aff5797dcdf1
e3f4edf71eedf308d0e3c52d9f7a2ffc7b99d85eb7cf44970b9fed9263596f433a0e57755cac52
ea986ebd2ffd1e67c3147df66b7bcceaefc5ea5fdb50423b2bb0d7ab2c9d459f7b3d825b4be2da
c2569fde7da72f7b5ffefecbfd63a5f775da07aebb3a4c59bd0bdfd17f195b4be2dac2beecb231
f9377bfea55cf2f72ff1d3e380553a4de7e9328f7ce56b7e9d415c3ef1afe50b5fdcdfbafdd3eb
dcc4d18fc9bffae267e523a3d132eb2f0a8d9d72508e9f7ab6753b2447e4445822d3f183728f6c
976d9786c71b893ba11d383425dbaf0f8f954e7b694a76b8d7756cad4f72977e5cfef0d4fdf289
bede9b6be40fdcfbfd07c97dcde24fd2f7f5fe4c9631dcc0d92a9f78e888ecbb416447d5bdd6ab
f53587e3a73a2572c35e79323cfec3dbb686757a71c7a15b6dc7cef0d073e1f0b0c8be78bba7dc
f3bdb42bf322e0c4c37b456e2db8bd8a6cbbf7485827ba1dba72afdcb4c601b7a6819e3aa6ddfb
b267af5c51d5d7d6ef71b6becee6c54dd2aa437ba305766c3d82fbc8d7fea2d5c2bef1968f86a9
69da877deab9e7c3a3d51be4fbd8f5a7bee54be277de953a6b64d26574595dc736bd62de252feb
09ae744d9816b9b6f459b936dccf72e2f1aaecb8fbe3ad93e44672e6e811917b77a5f6df4fbb75
977cea56917b1e3efb27132445c7a15477c9552f85499ebb3028258fb1adb2cd05f3b1e7e7c3e3
d84939e2026dbac7c5c1b5a567e5c97bed7ef6e9637a5e5e385a90abf842ccb25615da1b35b063
6b1ddcdf3e1a0db8bbf993dbfdcf4e1ad8c32889279dfff6fedfdf93cf7dc7f761c72dec58dc2a
4ed2657459ede35ebdefc89f24cae34b3cf7e54449bdc7722bf1ea9c3c71b4f7c92e2a5976b6f0
a29364aa25db8754d93255ae8c5afbf1bc764b2a94e11e0da5c0b08ebf8a6f2ddfb96f67e4d863
ee38bb21f99adad3b6deb05db61dcaa82284d26cbccd6361722494ea8eb74bb5d13e26f73bb91f
6179dfaa0bafe17872d9648b2f9e1f1e66bd17ba6f37ee75fb54959d3addb760b2df9bf4eb68bf
97fadedfb4674ee4d02e3fbddbf3a55f4797e718b2338fee957bae3cb87cb521d876f558b8171c
3f228fecdcdef322532dfdec33deeb58abfc1cddb24bc1d1fba3efcbd3dddedf8ecf23ddfa8c8f
936ec7462c714cfbfdda258fc89cdc73a35bbef599847dc9dc4ed6e718a6258fcbc471d57d5f92
b2f73bfb580bafb5efdfa1e1585568c781adf4e7537f5ef723a87bdde291ddc3a0dbca7a8ee44d
f729b98fbacfc3f2ddfffd7ffccf64493c494be371ff76f2b61a8384f6e9d3f3ad416749c9f278
922e1b8f2c5f331ad80f8a7c262ea97ffa52f9ea834fc90fc3ec553bfd821cbbe12a59faaa7b3b
f3e8037d9d2453dcc96be74bed92e99377e7c20cfda5d556565cca3c2857ecd99b3a593ce24e58
be44fa906b75b993d63d7b7272286ce778b5e32230ab6caf1727f1b44b0beee4579523c993b09e
58a7dc3926dee6d357c9137ad2497127c92f86fd787aafc89eedee247344b6fb75b44c5c9503c9
937e8747a6e2659f95433bddb6f66407e08972a87c84ed4e5fe1265eff59ff9cdb642adac74455
24f5deb8c7271e4fbc8eea941cdb73d09f08a39666416467d40d120564f4deb79f4f9769cace8e
70ee7c8ea1d2cff3b1edf26447a527db49f9d29ea517645fff625576dcd2c7fa97e6e40a694ad3
1f5bbd8e3bb7cd56f9399ab7b4a9a1e1b6dd5f6ce8fb7263d6fbeb8faba6ec7b3ade4e56795fc3
b77d6c1cafe6dce38ef04a1ed3beebe5a0ec9042b45dff9924f6a5c776b23ec7f671e9b6e943d6
1ddbf746dbf0c7698fca44b7633afb5853abfb1d5a89a10d44c3b9e995d9cf275acd5f9617c3f4
6e5e6cfc955c3e718bbc3f3c96eb6e91df9167e5f961b6b697a381712a592a8faefaf7ddd9cf49
b6c3d11724beccd97afd35d189435b4937ec954fb57eb1af914fdd2bf2c4d1f62fefd2327c7ce2
75dc7692170f5965fb747f6754627de4f1f6c948d7d9962ca7bb13e33e3de9a4b893e4bd61bb3e
f8b5df345ea75bd9b66d47b5fd1e5e7ba70be0c47bd1a9bd9dad72edf5e957dea9f3b5a6ba35ae
dfee4eee89f7aa5378eff7252a2d5b6fbb4b761c4df7fbaf5d378886e311b9397e5f7bd260d20b
8cbde93e5c7f41963c7efad4c771f7f2cbf17d778c756cff443984648f8b8de8b84aeeef56f9c4
ddee42eab1391f6e110ddfe467b6cb8757f2a272d9aea850313b94dc978ced646da37d5c5e23db
b56770e75dadfdbdf6167725fb5233b1af69831cd391d5fd0eadc4aa423b2e3d2bfdf9b1df1a97
edffe4377bde86f93530dd56d673246fba4fc97dd47d1e965ff9d5f7f99fafbcf88affd98b0e5a
fbcffff60bf2675f7a344c5999bffb59ffe57d1d5c3648cb5997d57506911e8876473b8c33fdb5
fcf50f3a83fef3f2d51fbc2adf73d387e2b2abfaf845eb906cb5f6e3ca5cf44baae15f75e7045f
066b97d2cebcdc7461ae8384e21259545aebfacbab2d8da7b7cb135a1a74cba6cb9659657b9de6
82d05fd5b7b72f871e68b5aa9a2f895c71c5f2b1d1b65572570eba4e7fb4957248a2b2e28acad1
a9b2ae9651bbf3ef7dfcf9b48cc95537ccc90ba7c3c3a1499641c36bd316e4516d69c6d35d101e
d5169cbb9f2a23472dc9276e3db264505b3456a13d00ada7579bf2b2e424e78edddec75d34c8ee
e6c7c231d339a0cab5487dd5a86775a0cb71b5ecef5c746cb5f5d1159559318bb6d3bef058de7b
ae2e2ced7a58336bf73b94b4aad05eaf51da2bb5d67dee1fba21ba0078e26bee976c197f74ff23
f2eda3ff4d5e5de8d644e8cf4f7ffeb3706f79d75cf71bbe8ffab51fbe16a674a7cbe8b2baceda
f965f9e577bb8bad4fc721dfbef951e7c390552a5e46e7285db5f58a5ce615b93f3126f956bb96
c63474a3e0f6eb86325aead6eb84e84b84badc411177828f833bb36c1f5a5471593ebe69392f6a
55659fdcbeff7c67797cfd6870eb3e3ee942eaa641825b03fbc61764baf53ab58cda5db7cf4d5b
44c31fe4148d926f7d065aa28d8f87d62d1e8deeeeb73effee81ad81b6b45cde9d3f7643cb6ef9
e34e833b9ae62fa292c1edd6f3a3d17b7e363d42b367975414f6b1bebaa27a5c08ac75286e74ab
2e8f6fd4e05e8f4172db3ff98fe45dbfb0c50f36d3ef6b77a3f3e20169b7efbacdff5ca9b77efa
56b8b7bcf18f7d44b66cb9401e7ef02b614a770f3f70c82fabebaca5f7e77f5d8e3db87c197de5
a2729db66cd2fd6c5afe0bfd617e204ddc37165df52f19b8a66558d76ab927b90ddff7dc2ea39f
79f4be763fb5ef5b0c745dd772c91ee893c1ed4f7b596d1586bbee649755b6f725ca8c969896fe
e232a5b630e2be5fcfedfb01d73a5f7f2ea0caed20f0c13288ce16975eb084bb99323e373f28ac
572525753cacb55e81ede8eb4b9473bbd3ed7cd0b78e5b5d013d8fbb93f2b94448ebf1d1c95744
96096e7f8ca5c667b8fd708fd317bde97ee3e8fd8fcbf67d7645858bef9dc90b0bf739ed5cc160
d1ae7c0567b981691bcf50fab4375a70af47602bfdd3a4fffceee8ba5fff78ca83958752a5f253
fffd949fa6f3947e97fbd2b17e6bb0d95e7feb6fc2bde5e99f26bded931ff765efff50fe42abc5
1db76e954ed3793a686dc7bff8edb5ff73a6d7dd21f74cbc2af7b7cae3eeb66f8803d1946fede8
209c76f9586f07ae4ef4f1c6fc4932ebaa5f5b511ddbb8f188dcfc74fb3ba45b5d4ab7cba03a00
289ee7d67d7aafbcac25d178dd5e2707d7aa682f1b9dd0fd4097acb2bd0f5f3da1659cf043607d
c99db4b7de767f34002b7e7e77b131bda44f7b3db8d6993b61b74ab63a382e1e3474e9c7657a67
72f47806edc74caeffb86bb58659caf757a746f42efddc6ed2416189814add45811a95b3d7e864
eecbe7e9ae0d7f0bafdff7f5761980965e67bbbc70b76b35a75e57afe3ce5d0cbe14ba28dccdbf
2719959f6b4b47c2fb1daa469defaffe6ef90161f1f6b32e400ab2efea23ede7d24196f17ef6dd
151595f375905bbc9d686065a2af7c9d2d3dd6ce0efe8ce910e86b7e70ff43f2e3fff7669892a6
ad710df76edfe51ed4af5df2ab72c1f95bc2a3e5457fc6f41bf2e69b6ff9f2f7659745ed96d3a7
bfefbf16a62d6c0dec6baefb877efa46b4367fc6343a49ebc9afdfafe6ac27fd9ac90177f2ebef
0f79c0bc5657c0d90ba6d5d37efe07e4aac4c56d12c7f4ea0d75f478b2c57db6ad57602b7d9eff
54fdbcdc7ec7646b709a06b5fe25349da6f38615d8ea076f0cd604d0bf29ae7faef4e65b6f92d7
cebc264f3cf697fea6f7759acedbc881bd66563a4a775d7429db63d3cafa033a9b0bc7f4300cfd
7ff9c2fa18b4b56d1dff61086041ef9636568fd036ea82f3b6c895975c714efd9fda0070aee38c
6fd45b3f7d53bef7faf7c22300c0b980d036ecf5b75e97effedfefcacf177f1ea60000363342db
b8d77ff2babcf4dacbf2939ffd6d98728e1b093f01601322b437012d95bf78e67fcae9d74fcb20
7fe67453628406804d8c81689bd085e75f2817bdf322d972fe1639ffede7c9796f3b9f016b00b0
0910da00001841f30b000023086d00008c20b401003062e44bfff5207dda00001830b2e884fb00
006003a33c0e008011843600004610da000018416803006004a10d008011843600004610da0000
18d1d7f7b477efde1dee01b6ecdfbf3fdc0300fb960d6d0d6c4e7cb08ae317c06642791c000023
086d00008c20b4010030e2ec8576a32223933559080f0100406feb18da0da98c8c48a5111e0200
8081501e0700c088158576a3322223aed5ec6f1d25ee85da647b9ede7cd37a416a930529b97ba5
42bab55d4f6c6bb216b6a4a5f354935cd79f947876f6730000b0b90d1eda2e500b8daacc2f2e8a
7ec57b2e3f25d389b01d9bcacb5c98b7385776295d71613b2ac5c373e21e49796e5166f2d1e232
3b25cdf1f6b2b353d35130e7c7a55caa4b2b8a17ea5293a28c8fbafb5d9f235a140080cd6a65e5
7117b60743a2e66716e57051d3d43f70413a237126fbf00d77b395653c5e38b56c5ec6cb25a987
e758a8d7448ae3e29f65e0e700006073183cb435345deb56cbdc71793a5d9d8e069c45f3a29278
571339c985bb9df2e3ee397c6a2f4894d9e1c2c01be0390000d82456d6d2f6addda83c3d5f9d70
015ef1a5eca8afb922b9f950ba5e8c4ae22b1297c893a57167a8cf010080210387b60fcdc4e0b3
d15cbed5626e366745ca331257cb1b95d5b482a31279653a511a7786fb1c0000d83170688f160f
fbc167637179bad090ea81a20fd5fc8c6bf5960aa16c3d22f5f179a94ecc4aadee4797b9108e46
8fb746892f434be4b32ea393a5f1decf0100c0e6b5b1ff97af859a4c4e8b1c381c5d140083e27f
f902b099acac4f7b9da4468d0300708edba0a1ad7f4c6544c66a453910775e0300708edba0a1ad
7f8c655116298b0300d0b2a1cbe30000a06dd981684a07f3001631080dc066d25768030080b38f
f23800004610da000018416803006004a10d008011843600004610da000018416803006004a10d
008011843600004610da000018416803006004a10d008011843600004610da0000184168030060
04a10d00801184360000468c2c3ae17e57bb77ef0ef7005bf6efdf1fee01807dcb86b60636273e
58c5f10b6033a13c0e008011843600004610da000018612ab41b951199ac2d84471d1a151999ac
49d65c5d6f64247dab34c2cc75b720b5c9f8f993f70100e86d6387f6424d264726a55b4ea7e467
64f1705146c343cfaf3f220599131d6fd7bacd57a55170e1dd25e4d7d6a8140f2fca4c3e3c0400
a04f9bb73cae813d3625f93917d29d09395a94c38bf352952999eeeb8a000080b36ff0d0f6add7
8ad46a93ad5273b264ada5e84aa512cd8b5bb25aba0ecb8e2c69394725e2d6fc56adb8211517ba
b3eedfd458729dba54b2b6d5511e6f1c74eb96e7a2166d6871eb3abaaf51995da4385396d9a983
ee9962ee395bdb0eaf31de9fb0fd5aa2d4aeb392a5f764997b21f1fef85b6b66ff25f16edb56a9
927fb262d0e5f349ee4fd72e0600c086b6c2967649a69a33a1dc3c27f9a9b154a8944a22733a4f
cbd51a22858654e743697a2eef42b8d20aca46654ca6f271f9dab57e1b85102a799999afca84fb
579d3f2cc550f79e9d6acab85f7651e6ca2ed0a7b34adc0da997dc7abb5c62fb16774d8ae1f967
9a635270fb97cfb90de6c7a5ec966dfa0d689816a4519d8ff6653e27b5a959bfb596d929698e47
db99af4e48a93022f5e4e34afb22656c2a1fbd077a9b2bbb37c505e92059e9b6512895a36db8f5
4b85f67ba6015c6854653e6c7f2e3f2563c9e0769f4f4d0eb49e7bd67d3ed3a9c7c90b15008015
2b0ced10885e5e766960d51331501e7753230bf59a6bf1ceb44257fb9ee7ca2589164f84ab372a
c50355915a3d238883c4b6f3e32e0cb334ea529a28cab87b4e6d714bf540ebf9f3bbf442a02ce3
f1465c4bbed9743f16ea529b2dcb4cbce068515c43bc437bbdd19cdee97c1c68fffae24c6b3fa3
8b83c134eaeeca227eada9ed2d48bd362be59976ff7d7e664ecab335a9b7deb40929ea8b57b99c
bff0493f060058b4c2d0ce8b3654bb9970c1106b365d6bb554689566f5a62ddd86366f179a2eb6
b5fcdd9e37a225f1d9a6688e66496e7b797a51e0f636b9b32ea1672772d2deca84e658a65cae23
de52eb399d8f5392a5f6826bfb0e2efbb5baf766b6fb3e473a3f9fde9f1700c0861586765c52ee
53b963f4b6bb1d6e35bdb5fc9d9e976aa5ae5a3ae07c0b369ff3add4855a454ac92ac09044fdc7
15c9b55e976b0987798398f525804eee42612254070000e7941586b66b1d1f6cf54acbc1a95929
b7ebcd29be1c9deacf8d5aa0be0fdc97a093db0a8197ea9f5d21df5acfcb7872fbbe9f58abce6e
5f7dbfb3b44bf3a3e3529c284925ded1859a4c77f669f7c957171217038dcae02d6d5ffa2fd5dd
bbe5f8c165f1a0bb51192f26facf1dbffdd01d0000d8bc5618da65a9e6e211e1051d75d6fd7bc7
faf52a3ff8ac5d2a4e2e9f9f89069fc5e5f1b15a51e6e3ef5bfb208dcae7fd8cb66ef17dc851bf
b9efef8dcbf3f571f163c2f43bda7e37da03dc340c8b87a341757ed9b1a614ab2bebfd4d3da7bb
d5c7dd6b74afa3d6ee74cee42f58e2179a9f91f96a430a7e5fd2fdf2a3c5c3d1e0b3b07d3f28ad
f33bea00804d67f0ffe5cb8fc66ecacc504bd8c3a701188de0eeb59fdaea8f468cb7cbf56dfeeb
6bb9ec79b081ffe50bc066b2c296f6c6a7add1b8a59af5bde4a8df396af547a19c28db7b1983d8
0000388b366d682b0deef87be471a93abef932fc62b2ac9f9719ff7de87899a805deb5ec0f00c0
3a1b3cb4fd9f00ddd8a5f13417c6ad51e9895b561fb0ff3e747b19cae200808d6453b7b40100d8
4c961d88a674300f601183d0006c267d8536000038fb288f03006004a10d008011843600004610
da000018416803006004a10d008011843600004610da000018416803006004a10d008011843600
004610da000018416803006004a10d008011843600004610da0000184168030060c4c8a213ee77
b57bf7ee700fb065fffefdf2cc33cf8447910f7ff8c3e11e00d8b26c686b60eb890fb0488fdfdb
6fbf3d3c8a10da00aca23c0e008011843600004610da000018b1a2d05ea84dcac8c848eb566984
195e432a8979239335590873547add8a5b3aad51e9775dbd25d65fa8c9646bfaa4d4922b3aa975
93db6d54dad393b7d68beafd7ada16a436d9f95e0000303c8387b60bb9b1a9bccc2d2e8a8e615b
9c2b4ba91087a40657411ad5f968dee2bc54654ac6e224eb5877beda9042220435582bb978dd45
99cb27d6759acd5929cf85e7f5b719c9fb392e58c76a529c8fa71f10994e04ba3e6fad28f361bd
f962adbdddfc4c5827dce6ab32e1fe5577455b5ea855a4549e0bf3a3d733dd7945e02cd4a6656a
363c0000600d0c1eda3ee4e2b074f2bba43a31eb02551f8c4af1f0a21c2e8efa59fef14cd98566
330ae68e7547c78b3231db14bfaa8bd8832ef5f2b9785d5ddc05e54cbcf482341b1392cb858749
8dba94268a32de5a755472f992d4432e2f34dd9d7cce4d8d8ce6dc36e37d4a71171dd35322d503
12bd8405a9d7dc85c2786b8ffdeb998d5e6c82eebbc8c444780800c01a38ab7dda0d9774b3e5f1
28c4179a2efacad2cac7255cb8cfe62591e9cb6a34a358ee0ce9ce106f691c74ade5b2ccb42e3a
f439332e143a02bf512988ccb9a00f8f0100580bab0fed1074d961eb5aae95924c14c7d30119fa
9f0ba576195a9beabeba9cec634ef61f6ba84fa4fb975b95f3fcb894676b526fa5724ddcd3b65b
c4dac29f69ca58586f5a0e245af0b1b0afd55ded2a421697e0edea80a3cfd5a84afc320000582b
ab0c6d17a2859294e712e5f204dfcf2b5539d06ab906a34539ecfb8f8b521b4b0e1a2b49a13e1e
fa8f3bfa9e35d45daab7fbade7255789d7cdcbcc5c5ea6c642a04f8bcc54dbb56a3f082db1dd03
2eb6db03cd8285bad45cabbad8aeb1f741cbe935291e282e6db503003064ab08edf6a0b3258d56
150f3a3bdc23d046c7a538312b356d226b0b56ca3297d898eff32ed5a30165be3ffc70e86b56da
6f1dd655c90165ee39a5392b13beaeddd92f1d6fb7921e61ae1705a97ef12efc7239f11573ad32
b8e7edbc260100602dac30b4b54c3d26b5e27c62d0599b6fd96a376f72c05a0f7ef0d9686ee9b2
c980ec223970ad4d07ad759b97ad512fe90a1d1718eeb95b83ec12c2727e9d522194ebc7fce8f1
526144263346970300b05a8387b6ef8f8e5ad85981addfb38ebed69511d8da5f9deaa7d69274dc
1f9e97f172492a89c0d30163717fb8bf10487d47ba21f552bcae5e4424caecba5d89fb994765bc
38d11a94e62d695547219f6c8d47a2754bf13074b79ceff70e23d3fce8f6b875af5f079b70db98
4b8e9e07006078060eed857acd0f189b9d1a0b2dcce816b52e354875a9921412f35a7f04253f13
f553c7d3fd77abdbe1ae2138d36c6f77ac39d30ac0d1e2e1f4ba6e9bb9d6ba1d7dda634d994994
e575dde476472a39994f95ed759478b8db212aa5275ad3597df40000ac03fe972f6c6afc2f5f00
3693558e1e070000eb85d00600c008421b000023086d00008c5876209ad2c13c80453a88f29967
9e098f220c440360555fa10d0000ce3ecae3000018416803006004a10d008011843600004610da
000018416803006004a10d008011843600004610da000018416803006004a10d00801184360000
4610da000018416803006004a10d008011843600004610da000018416803006004a10d00801184
3600004610da000018416803006004a10d008011843600004610da000018416803006004a10d00
8011843600004610da000018416803006004a10d008011843600004610da000018416803006004
a10d008011843600004610da000018416803006004a10d008011843600004610da000018416803
006004a10d008011843600004610da000018416803006004a10d008011843600004610da000018
416803006004a10d008011843600004610da000018416803006004a10d008011843600004610da
000018416803006004a10d008011843600004610da000018416803006004a10d00801184360000
4610da000018416803006004a10d008011843600004610da000018416803006004a10d00801184
3600004610da000018416803006004a10d008011843600004610da000018416803006004a10d00
8011843600004610da000018416803006004a10d008011843600004610da000018416803006004
a10d008011843600004610da000018416803006004a10d008011843600004610da000018416803
006004a10d008011843600004610da000018416803006004a10d008011843600004610da000018
416803006004a10d008011843600004610da000018416803006004a10d008011843600004610da
000018416803006004a10d008011843600004610da000018416803006004a10d00801184360000
4610da000018416803006004a10d008011843600004610da000018416803006004a10d00801184
3600004610da000018416803006004a10d008011843600004610da000018416803006004a10d00
8011843600004610da000018416803006004a10d008011843600004610da000018416803006004
a10d008011843600004610da000018416803006004a10d008011843600004610da000018416803
006004a10d008011843600004610da000018416803006004a10d008011843600004610da000018
416803006004a10d008011843600004610da000018416803006004a10d008011843600004610da
000018416803006004a10d008011843600004610da000018416803006004a10d00801184360000
4610da000018416803006004a10d008011843600004610da000018416803006004a10d00801184
3600004610da000018416803006004a10d008011843600004610da000018416803006082c8ff07
2b66a8ae8ad5d2580000000049454e44ae426082
}\f0\fs22\lang16393\par
2.develope a  flask program wich shoud contain  atlest  5 packages  use the pypi.org?\par
Import   requests\par
From flask import Flask, render_template,redirect,url-for,request\par
From delete import  datetime, timedelta\par
Import time\par
Import json\par
Import  os\par
From trending import get-trending\par
App= Flask (--name--)\par
@app.route(\lquote /\rquote )\par
Def trending():\par
Info= get -trending()\par
Render-template(\lquote display.html\rquote , info=info[\lquote date\rquote ])\par
Return res\par
If\emdash name-- ==\rdblquote\emdash main\emdash\ldblquote :\par
app.debug=Flase\par
port =int(os.environ.get(\lquote PORT\rquote ,33507))\par
waitress.saever(app, port=port)\par
\b\fs36 ASSINGMENT  2\par
1 create  user  table  with user with email, user name, roll number,passwort?\par
\b0\fs22 Create table student (user name  char(20),Roll no int, Email varchar(20),password varchar(20));\par
Select * from student\par
Insert  into student values (\lquote prema\rquote ,1,\rquote premap@gmail.com\rquote ,56890532)\par
Insert  into student values (\lquote sathiya\rquote ,2,\rquote sathiya@gmail.com\rquote ,2623065)\par
Insert  into student values (\lquote divya\rquote ,1,\rquote divya@gmail.com\rquote ,264121654)\par
Select * from  student\par
Update student set phone number=7658492132\par
Update student set phone number=9852254752\par
Update student set phone number=8523142125\par
Select * from student \par
Delete student\par

\pard\sa200\sl276\slmult1\b\f1\fs40\lang9 3.Connect python code to db2 \b0\f2\fs32\par
import ibm_db\par
\par
# ...connection_string = "DATABASE=" + self.params['schema'] + ";"\\\par
                                        "HOSTNAME=" + self.params['host'] + ";" + \\\par
                                         "PORT=" + self.params['port'] + ";" + \\\par
                                         "PROTOCOL=TCPIP;" + \\\par
                                         "SECURITYMECHANISM=4;" + \\\par
                                         "UID=" + self.params['user'] + ";" + \\\par
                                         "PWD=" + self.params['password'] + ";"\par
ibm_db.connect('DATABASE=mydb;Instance=DB2;PROTOCOL=IPC;', '', '')\par
ibm_db.connect('DATABASE=mydb;Instance=DB2;PROTOCOL=IPC;', '', '')\par
add ibm_db library and import ibm_db on top in the .py file.\par
def get_db_connection():\par
    """\par
This will help to get db2 connection for query execution\par
    :return: conn\par
    """\par
  dsn_driver = "\{IBM DB2 ODBC DRIVER\}"\par
    dsn_database = "BLUDB"\par
    dsn_hostname = "your_hostname"\par
    dsn_port = "50000"\par
    dsn_protocol = "TCPIP"\par
    dsn_uid = "your_userid"\par
    dsn_pwd = "your_pwd"\par
    dsn = (\par
        "DRIVER=\{0\};"\par
        "DATABASE=\{1\};"\par
        "HOSTNAME=\{2\};"\par
        "PORT=\{3\};"\par
        "PROTOCOL=\{4\};"\par
        "UID=\{5\};"\par
        "PWD=\{6\};").format(dsn_driver, dsn_database, dsn_hostname, dsn_port, dsn_protocol, dsn_uid, dsn_pwd)\par
    try:\par
        conn = ibm_db.connect(dsn, "", "")\par
        print("Connected!")\par
        return conn\par
    except Exception:\par
        print("\\nERROR: Unable to connect to the \\'" + dsn_database + "\\' server.")\par
        print("error: ", ibm_db.conn_errormsg())\par
        exit(-1)\par
function get_db_connection() will return the connection object. On that connection object you can perform operation like:\par
conn = get_db_connection()\par
list_results = []\par
select_query = 'SELECT  a.STATUS,  a.ID  FROM  "TABLE_NAME" AS a'\par
print(select_query)\par
selectStmt = ibm_db.exec_immediate(conn, select_query)\par
while ibm_db.fetch_row(selectStmt) != False:\par
    list_results.append(ibm_db.result(selectStmt, 'ID'))\par
ibm_db.close(conn)\par
d2 to python.txt\par
Displaying d2 to python.txt.\f1\par
\b\fs40 4. Flask App:\par

\pard\sa200\sl240\slmult1\b0\fs22  from flask import Flask, render_template, request, redirect, url_for, session\par
from flask_mysqldb import MySQL\par
import MySQLdb.cursors\par
import re\par
 app = Flask(__name__)\par
 app.secret_key = 'your secret key'\par
 app.config['MYSQL_HOST'] = 'localhost'\par
app.config['MYSQL_USER'] = 'root'\par
app.config['MYSQL_PASSWORD'] = 'your password'\par
app.config['MYSQL_DB'] = 'geeklogin'\par
mysql = MySQL(app)\par
@app.route('/')\par
@app.route('/login', methods =['GET', 'POST'])\par
def login():\par
 msg = ''\par
 if request.method == 'POST' and 'username' in request.form and 'password' in request.form:\par
username = request.form['username']\par
password = request.form['password']\par
 cursor = mysql.connection.cursor(MySQLdb.cursors.DictCursor)\par
 cursor.execute('SELECT * FROM accounts WHERE username = % s AND password = % s', (username, password, ))\par
 account = cursor.fetchone()\par
 if account:\par
 session['loggedin'] = True\par
session['id'] = account['id']\par
session['username'] = account['username'\par
msg = 'Logged in successfully !'\par
 return render_template('index.html', msg = msg)\par
else:\par
 msg = 'Incorrect username / password !'\par
return render_template('login.html', msg = msg)\par
 @app.route('/logout')\par
def logout():\par
session.pop('loggedin', None)\par
 session.pop('id', None)\par
 session.pop('username', None)\par
 return redirect(url_for('login'))\par
 @app.route('/register', methods =['GET', 'POST'])\par
def register():\par
 msg = ''\par
if request.method == 'POST' and 'username' in request.form and 'password' in request.form and 'email' in request.form :\par
username = request.form['username']\par
 password = request.form['password']\par
  email = request.form['email']\par
  cursor = mysql.connection.cursor(MySQLdb.cursors.DictCursor)\par
  cursor.execute('SELECT * FROM accounts WHERE username = % s', (username, ))\par
 account = cursor.fetchone()\par
 if account:\par
msg = 'Account already exists !'\par
elif not re.match(r'[^@]+@[^@]+\\.[^@]+', email):\par
\par
\par
\par

\pard\sa200\sl276\slmult1\b\fs40 Login Page: \b0\fs22\par
 <html>\par
  <head>\par
<meta charset="UTF-8">\par
 <title> Login </title>\par
 <link rel="stylesheet" href="\{\{ url_for('static', filename='style.css') \}\}">           \par
 </head>\par
  <body></br></br></br></br></br>\par
  <div align="center">\par
  <div align="center" class="border">\par
   <div class="header">\par
  <h1 class="word">Login</h1>\par
   </div></br></br></br>\par
   <h2 class="word">\par
   <form action="\{\{ url_for('login') \}\}" method="post">\par
 <div class="msg">\{\{ msg \}\}</div>\par
 <input id="username" name="username" type="text" placeholder="Enter Your Username" class="textbox"/></br></br>\par
  <input id="password" name="password" type="password" placeholder="Enter Your Password" class="textbox"/></br></br></br>\par
 <input type="submit" class="btn" value="Sign In"></br></br>\par
</form>\par
  </h2>\par
  <p class="bottom">Don't have an account? &nbsp<a class="bottom" href="\{\{url_for('register')\}\}"> Sign Up here</a></p>\par
 </div>\par
</div>\par
 </body>\par
</html>\par
\par
\b\fs40 Registration Page: \b0\fs22\par
<html>\par
<head>\par
<meta charset="UTF-8">\par
 <title> Register </title>\par
 <link rel="stylesheet" href="\{\{ url_for('static', filename='style.css') \}\}">              \par
 </head>\par
  <body></br></br></br></br></br>\par
 <div align="center">\par
<div align="center" class="border">\par
 <div class="header">\par
 <h1 class="word">Register</h1>\par
 </div></br></br></br>\par
 <h2 class="word">\par
<form action="\{\{ url_for('register') \}\}" method="post">\par
   <div class="msg">\{\{ msg \}\}</div>\par
   <input id="username" name="username" type="text" placeholder="Enter Your Username" class="textbox"/></br></br>\par
 <input id="password" name="password" type="password" placeholder="Enter Your Password" class="textbox"/></br></br>\par
 <input id="email" name="email" type="text" placeholder="Enter Your Email ID" class="textbox"/></br></br>\par
 <input type="submit" class="btn" value="Sign Up"></br>\par
</form>\par
  </h2>\par
    <p class="bottom">Already have an account? &nbsp<a class="bottom" href="\{\{url_for('login')\}\}"> Sign In here</a></p>\par
 </div>\par
</div>\par
 </body>\par
</html>\par
<html>\par
 <head>\par
 <meta charset="UTF-8">\par
  <title> Index </title>\par
   <link rel="stylesheet" href="\{\{ url_for('static', filename='style.css') \}\}">  \par
    </head>\par
    <body></br></br></br></br></br>\par
        <div align="center">\par
          <div align="center" class="border">\par
<div class="header">\par
          <h1 class="word">Index</h1>\par
          </div></br></br></br>\par
           <h1 class="bottom">\par
            Hi \{\{session.username\}\}!!</br></br> Welcome to the index page...                 \par
          </h1></br></br></br>\par
         <a href="\{\{ url_for('logout') \}\}" class="btn">Logout</a>\par
         </div>\par
       </div>\par
   </body>\par
  </html>\par
  \b\fs40\par
CSS Code\par
\b0\fs22  .header\{\par
 padding: 5px 120px;\par
  width: 150px;\par
 height: 70px;\par
 background-color: #236B8E; \par
 \}\par
 .border\{\par
  padding: 80px 50px;\par
width: 400px;\par
  height: 450px;\par
border: 1px solid #236B8E;\par
 border-radius: 0px;\par
 background-color: #9AC0CD;\par
 \}\par
 .btn \{\par
padding: 10px 40px;\par
  background-color: #236B8E; \par
 color: #FFFFFF;\par
 font-style: oblique;\par
   font-weight: bold;\par
border-radius: 10px;\par
   \}\par
   .textbox\{\par
padding: 10px 40px;\par
 background-color: #236B8E; \par
 text-color: #FFFFFF;\par
  border-radius: 10px;\par
 \}  \par
::placeholder \{\par
  color: #FFFFFF;\par
 opacity: 1;\par
 font-style: oblique;\par
font-weight: bold;\par
 \}\par
   .word\{\par
 color: #FFFFFF;\par
font-style: oblique;\par
 font-weight: bold;\par
 \}\par
 .bottom\{\par
  color: #236B8E;\par
font-style: oblique;\par
  font-weight: bold;\par
 \}\par
\par
\par
\par
\par
                   \par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
             \par
\par
\par
\par
\par
 \par
\par
\par
\par
\par
        \par
\par
\par
\par
\par
\par
\par
\par
\par
              \par
\par
       \par
\par
\par
}
 